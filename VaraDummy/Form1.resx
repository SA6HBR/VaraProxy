<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAQAAEABABoCgAAFgAAACgAAABAAAAAgAAAAAEABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABAICAAQCBAAEBAQABAQGAAQGBgAIBgYACAYIAAgICAAICAoACkoKAAwMDAAMDcwADw+/8A////AAAA
        AAAAAAAA3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d
        3d3d3d3d2Xmt3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3doCIgnd3d3d3d3d3d3d3d3d3d3d3d3d
        3d3d3d3d3d3dkCIkIL3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3dsCJJdArd3aVHvd3d3czcy83d3N
        3d3M3d3d3czd3Mzd0gJ93HO93cACIp3d3dkAAind3CIiAAJJzd3dkiIAIt2QJd3do83doiJCKt3d2gAi
        Od3cRCAiRCBL3d2kIAIk3SAr3d3c3d3EKpUEzd3bICRa3dxEQCJERAK93aVCAnfcAH3d3d3d3cSt2SCd
        3dxAXd3d3cxwCsuVIE3d3KQC3dcCrd3d3d3d3d3cQE3d3XAt3d2yXaIJ3dpACt3d2QC90gTN3d3d3d3d
        3d2QC93doAvd3UB9xAXd3ZIJ3ce7IJ3ACd3d3d3d3d3d3bIJ3d2yCd3cAn3ZAt3dwAfdQJwgXZAq3d3d
        3d3d3d3dwgXd3cQH3dkindoAvd3AB9wCrXAtUEzd3d3d3d3d3d3XAt3d1wLd2Snd2yCd3EAH2QKtkAog
        nd3d3d3d3d3d3doAIkRCAL3ZTd3cQCQgACnZJ92yACInzd3d3d3d3d3N2yAiIiIAndpd3d1wAiICK9k8
        3cICJCAq3d3d3d3d1C3dQCM0RCBd2yzd3ZAERCB92k3d1QJERAK93d3d3d3ADN1wKZmXQC3cOd3dsgeV
        QizaK93ZAsymIF3d3d3d3cAs3aAL3d2QC91yvd3CCdxyCdtF3dogrdpADN3d3d3d0izdsgnd3bIJ3aQr
        3dQE3cUF3XKd2gCd3XAL3d3d3d3UK93UBd3dxQLdx0KtoiDN2QTdpCfHIl3dkAvd3d3d3dlCnNcCzd3Z
        IK3aVCeURL3SBd3HQkU0XdsgLN3d3d3d21QiIgCd3dtATd10QiEimUAn3dxUQgIpUAIs3d3d3d3dpERC
        In3d3XIJxwRUQiIiIird3cdEQiIiIn3d3d3d3d3cdEREfd3dpSIACcdURDIind3d3KVEQiIn3d3d3d3d
        3d3cuqq93d3ZRDIp3cp3Z3rd3d3d3Ll3eb3d3d3d3d3d3d3d3d3d3dylQivd3d3d3d3d3d3d3d3d3d3d
        3d3d3d3d3d3d3d3d3dy63d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d
        3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d
        3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d
        3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d
        3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3U
        JK3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3dl1es3bAAKd3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3bQC
        IiKcwyQgnd3d3d3d3d3d3d3d3d3d3d3d3d3d3d3dICIkQgW0JEQr3d3duZl3rd3ddUnN3d3d3d3d3d3d
        3dkAJZlkQHvMpSTN3d2gAiKt3cQCIivd3d3d3d3d3d3d2QJ93cpyCt3aUp3d3bICJJ3dcCJEIs3d3d3d
        3d3d3d3aIs3d3aIJ3d2UK93dxASqvdwgKblAfd3d3d3d3d3d3dtF3d3d1wTd3cck3d3XBd3d2gCd3HAs
        3d3d3d3d3d3d3Kvd3d3WBN3d23Kd3dkC3d3ZAK3dkArd3d3d3d3d3d3d3d3d3bAE3d3dpCIiQgLd3dkA
        zd2wCd3d3d3d3d3d3d3d3d3dIAfd3d3HIiIiAN3d2QC93cAJ3d3d3d3d3d3d3d3d3dQAKd3d3dtSIzQA
        vd3ZAK3dwAnd3d3d3d3d3d3d3d3dQAIr3d3d3ZQpqSCt3doAnd2QCt3d3d3d3d3d3d3d3dkAAn3d3d3d
        xyndQJ3d2iAHuiAq3d3d3d3d3d3d3d3d0gAlzd3d3d3aQs1Qnd3cQBIAAizd3d3d3d3d3d3d3d3AAkzd
        3d3d2iyCXXB93d1wAkIiXd3d3d3d3d3d3d3d3bACvd253d3UDLUqkF3d3aQCVCXN3d3d3d3d3d3d3d3d
        wCrd3afd3dUs2UKgLd3dxyCrrd3d3d3d3d3d3d3d3d3CC93dpd3d1wzcciIN3d3aUivd3d3d3d3d3d3d
        3d3d3cclzd2y3d3ZJ821IAzd3dx0Iq3d3d3d3d3d3d3d3d3d2UJc3UC93dpSSahACt3d3cdCBKzd3d3d
        3d3d3d3d3d3cdCIgAq3d3HRCIAAJ3d3d3HRCICrd3d3d3d3d3d3d3d2lRDIird3dx0RERDfd3d3dx1RE
        St3d3d3d3d3d3d3d3dx0QiW93d3cp0RER93d3d3dyXRK3d3d3d3d3d3d3d3d3dy83d3d3d3d3MuZ3d3d
        3d3d3Lzd3d3d3d3d3d3d3d3d3d3d3d3d3d3d3dzd3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d
        3d3d3d3d3d3d3d3d3d0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>